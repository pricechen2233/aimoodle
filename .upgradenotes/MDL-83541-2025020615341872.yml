issueNumber: MDL-83541
notes:
  core_question:
    - message: >
        Duplication or multiple restores of questions has been modified to avoid
        errors where a question with the same stamp already exists in the target
        category.

        To achieve this all data for the question is hashed, excluding any ID
        fields.
          
        The question data from the backup is first reformatted to match the questiondata
        structure returned by calling `get_question_options()` (see 
        https://docs.moodle.org/dev/Question_data_structures#Representation_1:_%24questiondata).
        Common question elements will be handled automatically, but any elements that
        the qtype adds to the backup will need to be handled by overriding
        `restore_qtype_plugin::convert_backup_to_questiondata`. See `restore_qtype_match_plugin`
        as an example.

        If a qtype plugin calls any `$this->add_question_*()` methods in its
        `restore_qtype_*_plugin::define_question_plugin_structure()` method, the
        ID fields used in these records will be excluded automatically.

        If a qtype plugin defines its own tables with ID fields, it must define
        `restore_qtype_*_plugin::define_excluded_identity_hash_fields()` to return 
        an array of paths to these fields within the question data. This should be
        all that is required for the majority of plugins.
        See the PHPDoc of `restore_qtype_plugin::define_excluded_identity_hash_fields()`
        for a full explanation of how these paths should be defined, and 
        `restore_qtype_truefalse_plugin` for an example.

        If the data structure for a qtype returned by calling
        `get_question_options()` contains data other than ID fields that are not
        contained in the backup structure or vice-versa, it will need to
        override `restore_qtype_*_plugin::remove_excluded_question_data()` 
        to remove the inconsistent data. See `restore_qtype_multianswer_plugin` as 
        an example.
      type: fixed
